Function DiFlex pipeline:
This pipeline is a Snakemake --use-conda implementation of a meta-transcriptomic workflow.
DiFlex will perform quality control, adaptor trimming, meta-transcriptome assembly and differential gene expression analyses.  

Usage pipeline:
The pipeline can be used with the next command line:
	"snakemake --use-conda --cores <ncores> [RULE]"
Data shown in the bracket is optional, but can be used as follows: 
- RULE -->	At the end of the command line, a specific rule can be called. This rule 
	will run. If the inputfiles are not present the rules that make the required 
	files will be runned.

Example:
Run the whole pipeline:
	"snakemake --use-conda --cores <ncores>"
Run the Quality Control:
	"snakemake --use-conda --cores <ncores> fastQC"

------------------------------------------------------------------------------------------

Function per script:
- fastQC.smk
	Description:
		FastQC is a quality control for high throughput sequence data. FastQC 
		provides a set of modular analysis. Through these analyses it is 
		possible to quickly understand if there are any problems with the data. 
		FastQC includes two functions, one for the raw data and one for the trimmed 
		data. Both rules take as input the direction of the samples, and their output 
		is a directory containing the results of every sample analysis.
	Usage of fastqc.smk:
		The FastQC can be runned by using the command line which is presented
		by the example.
	Example to call fastQC.smk:
		"snakemake --use-conda --cores <ncores> fastQC"
- trinity_assemble.smk
	Description:
		Trinity assemble will look for overlay between the sequences. The overlay 
		determined the order in which the sequences originally will be. Due this 
		the original sequence will be formed. The input is the trimmomatic trimmed 
		libraries. The ouput will generate a directory for the two outputfiles: 
		Trinity.fasta and Trinity_stats.txt.
	Usage of trinity_assemble.smk:
		The trinity_assemble can run by using the command line which is presented
		by the example.
	Example to call trinity_assemble.smk:
		"snakemake --use-conda --cores <ncores> trinity_assembly"
- trinity_de.smk
	Description:
		Trinity DE performs the differential expression on the trimmed data.
		First, the assembly data is aligned using bowtie2 and an abundance 
		estimation is done using RSEM. This output is used to make matrices of 
		the isoform and gene data. Afterwards the DE analysis is made for both 
		the isoform and gene data. Both use their respective counts matrix. Both 
		analyses are performed using edgeR.
		A differential expression analysis is also made using the TMM matrices 
		of both the isoform and gene data.
	Usage of trinity_de.smk:
		The trinity_de can be runned by using the command line which is presented
		by the example.
	Example to call trinity_de.smk:
		This example only calls the isoform analysis. 
		"snakemake --use-conda --cores <ncores> isoforms_analysis"
		This example only calls the gene analysis.
		"snakemake --use-conda --cores <ncores> genes_analysis"